name: "Charts: Release to GHCR OCI"

on:
  workflow_call:
    inputs:
      charts:
        description: >
          Json encoded list of Helm charts to release.
          Defaults to releasing everything.
        default: "[]"
        required: false
        type: string
      helmVersion:
        description: >
          Helm version to use.
        default: "latest"
        required: false
        type: string

env:
  HELM_VERSION: 3.11.2
  CHARTS_SRC_DIR: "charts"
  TARGET_REGISTRY: ghcr.io

jobs:
  release-charts:
    name: Release charts
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout chart sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: ${{ inputs.helmVersion }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.TARGET_REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: Package & Push Helm Charts
        shell: bash
        run: |
          CHARTS=( $(yq --null-input e '${{ inputs.charts }}[]' ) )

          for CHART in "${CHARTS[@]}" ; do
            mapfile -t CHART_PATH_PARTS < <(echo "$CHART" | tr '/' '\n')
            CHART_TYPE=${CHART_PATH_PARTS[0]}
            CHART_NAME=${CHART_PATH_PARTS[1]}
            CHART_TAG_BASE: ghcr.io/szinn/helm
            CHART_VERSION=$(yq e '.version' ${{ env.CHARTS_SRC_DIR }}/${CHART}/Chart.yaml)

            helm package "${{ env.CHARTS_SRC_DIR }}/${CHART_TYPE}/${CHART_NAME}" --dependency-update --destination "${{ env.CHARTS_SRC_DIR }}/${CHART_TYPE}" --version "${CHART_VERSION}"
            helm push "${{ env.CHARTS_SRC_DIR }}/${CHART_TYPE}/${CHART_NAME}-${CHART_VERSION}.tgz" oci://${CHART_TAG_BASE} &> push-metadata.txt
            cat push-metadata.txt
            CHART_DIGEST=$(awk '/Digest: /{print $2}' push-metadata.txt)
            cosign sign --yes "${CHART_TAG_BASE}/${CHART_TAG}@${CHART_DIGEST}"
            cosign verify "${CHART_TAG_BASE}/${CHART_TAG}@${CHART_DIGEST}" \
              --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
              --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/chart-release-steps.yaml@${{ github.ref }}"
          done
